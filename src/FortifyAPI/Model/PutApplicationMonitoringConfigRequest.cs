/* 
 * Fortify on Demand Web API Explorer
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = FortifyAPI.Client.SwaggerDateConverter;

namespace FortifyAPI.Model
{
    /// <summary>
    /// Post Application Monitoring Config Request
    /// </summary>
    [DataContract]
    public partial class PutApplicationMonitoringConfigRequest :  IEquatable<PutApplicationMonitoringConfigRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PutApplicationMonitoringConfigRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PutApplicationMonitoringConfigRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PutApplicationMonitoringConfigRequest" /> class.
        /// </summary>
        /// <param name="Enabled">Enable Application Monitoring (required).</param>
        /// <param name="ScanUrl">Scan Url (required).</param>
        public PutApplicationMonitoringConfigRequest(bool? Enabled = default(bool?), string ScanUrl = default(string))
        {
            // to ensure "Enabled" is required (not null)
            if (Enabled == null)
            {
                throw new InvalidDataException("Enabled is a required property for PutApplicationMonitoringConfigRequest and cannot be null");
            }
            else
            {
                this.Enabled = Enabled;
            }
            // to ensure "ScanUrl" is required (not null)
            if (ScanUrl == null)
            {
                throw new InvalidDataException("ScanUrl is a required property for PutApplicationMonitoringConfigRequest and cannot be null");
            }
            else
            {
                this.ScanUrl = ScanUrl;
            }
        }
        
        /// <summary>
        /// Enable Application Monitoring
        /// </summary>
        /// <value>Enable Application Monitoring</value>
        [DataMember(Name="enabled", EmitDefaultValue=false)]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Scan Url
        /// </summary>
        /// <value>Scan Url</value>
        [DataMember(Name="scanUrl", EmitDefaultValue=false)]
        public string ScanUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PutApplicationMonitoringConfigRequest {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  ScanUrl: ").Append(ScanUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PutApplicationMonitoringConfigRequest);
        }

        /// <summary>
        /// Returns true if PutApplicationMonitoringConfigRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PutApplicationMonitoringConfigRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PutApplicationMonitoringConfigRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Enabled == input.Enabled ||
                    (this.Enabled != null &&
                    this.Enabled.Equals(input.Enabled))
                ) && 
                (
                    this.ScanUrl == input.ScanUrl ||
                    (this.ScanUrl != null &&
                    this.ScanUrl.Equals(input.ScanUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Enabled != null)
                    hashCode = hashCode * 59 + this.Enabled.GetHashCode();
                if (this.ScanUrl != null)
                    hashCode = hashCode * 59 + this.ScanUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
